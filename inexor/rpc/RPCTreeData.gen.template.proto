{{file_comment}} {{!
  This is the input mustache-template for our state syncing machines protocol (.proto) file.
  Instead of modifying the generated .proto you should modify this file.
  Generation takes place on each build of Inexor.
  For more info about how to use this template engine, read the manual of mustache (its easy).
}}

syntax = "proto3";

import "google/protobuf/descriptor.proto";

package {{package}};

service TreeService
{
  // Bidirectional Streaming
  // 
  // Accepts and reads a stream of changed values from clientside, while responding with an (independent) stream of changed value messages itself.
  // The first messages will be the metadata.
  rpc Synchronize(stream TreeNodeChanged) returns (stream TreeNodeChanged) {}
}

message TreeNodeChanged
{
  oneof key {
{{#shared_vars}}    {{type_protobuf}} {{name_unique}} = {{index}}    [(path) = "{{path}}"];
{{/shared_vars}}
  }
}

/// We use extended options for saving metadata along the protocol.
extend google.protobuf.FieldOptions
{
  /// The path to the item in the tree.
  string path = 50000;
}
